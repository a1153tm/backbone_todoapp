// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var AppView, Todo, TodoList, TodoView, _ref, _ref1, _ref2, _ref3, _template;
    Todo = (function(_super) {
      __extends(Todo, _super);

      function Todo() {
        this.initialize = __bind(this.initialize, this);
        _ref = Todo.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Todo.prototype.defaults = {
        done: false
      };

      Todo.prototype.initialize = function() {
        return this.on('remove', function() {
          return this.unset('order');
        });
      };

      Todo.prototype.toggle = function() {
        return this.save({
          done: !this.get('done')
        });
      };

      return Todo;

    })(Backbone.Model);
    TodoList = (function(_super) {
      __extends(TodoList, _super);

      function TodoList() {
        this.add = __bind(this.add, this);
        _ref1 = TodoList.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      TodoList.prototype.model = Todo;

      TodoList.prototype.localStorage = new Backbone.LocalStorage("todos");

      TodoList.prototype.comparator = "order";

      TodoList.prototype.add = function(models) {
        var _this = this;
        if (!_.isArray(models)) {
          models = [models];
        }
        return _.each(models, function(model) {
          if (model instanceof Todo && !model.has('order')) {
            model.set('order', _this.nextOrder());
            return TodoList.__super__.add.apply(_this, arguments).add(model);
          } else if (!model.hasOwnProperty('order')) {
            model.order = _this.nextOrder();
            return TodoList.__super__.add.apply(_this, arguments).add(model);
          }
        });
      };

      TodoList.prototype.done = function() {
        return this.where({
          done: true
        });
      };

      TodoList.prototype.remaining = function() {
        return this.where({
          done: false
        });
      };

      TodoList.prototype.nextOrder = function() {
        if (!this.length) {
          return 1;
        }
        return this.last().get('order') + 1;
      };

      TodoList.prototype.swap = function(idA, idB) {
        var modelA, modelB, tmp;
        modelA = this.get(idA);
        modelB = this.get(idB);
        if (modelA && modelB) {
          tmp = modelA.get('order');
          modelA.save('order', modelB.get('order'), {
            silent: true
          });
          modelB.save('order', tmp, {
            silent: true
          });
          return this.sort();
        }
      };

      return TodoList;

    })(Backbone.Collection);
    _template = _.memoize((function(selector) {
      return _.template($(selector).html());
    }));
    TodoView = (function(_super) {
      __extends(TodoView, _super);

      function TodoView() {
        _ref2 = TodoView.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      TodoView.prototype.tagName = 'li';

      TodoView.prototype.events = {
        'click .toggle': 'toggleDone',
        'dblclick .view': 'edit',
        'click a.destroy': 'clear',
        'keypress .edit': 'updateOnEnter',
        'blur .edit': 'close',
        'dragstart': 'onDragStart',
        'dragend': 'onDragEnd',
        'drop': 'onDrop',
        'dragover': 'onDragOver'
      };

      TodoView.prototype.initialize = function() {
        _.bindAll(this);
        this.moving = false;
        this.listenTo(this.model, 'change', this.render);
        return this.listenTo(this.model, 'destroy', this.remove);
      };

      TodoView.prototype.template = function(data) {
        var _temp;
        _temp = _template("#item-template");
        return _temp(data);
      };

      TodoView.prototype.render = function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.$el.toggleClass('done', this.model.get('done'));
        this.input = this.$('.edit');
        return this;
      };

      TodoView.prototype.toggleDone = function() {
        return this.model.toggle();
      };

      TodoView.prototype.edit = function() {
        if (this.editing) {
          return;
        }
        this.editing = true;
        this.$el.addClass('editing');
        return this.input.focus();
      };

      TodoView.prototype.clear = function() {
        return this.model.destroy();
      };

      TodoView.prototype.updateOnEnter = function(e) {
        if (!this.editing) {
          return false;
        }
        if (e.keyCode === 13) {
          return this.close();
        }
      };

      TodoView.prototype.close = function() {
        var value;
        if (!this.editing) {
          return;
        }
        this.editing = false;
        value = this.input.val();
        if (!value) {
          return this.clear();
        } else {
          this.model.save({
            title: value
          });
          return this.$el.removeClass('editing');
        }
      };

      TodoView.prototype.onDragStart = function(e) {
        this.moving = true;
        this.$el.addClass('moving');
        return e.originalEvent.dataTransfer.setData('application/x-todo-id', this.model.id);
      };

      TodoView.prototype.onDragEnd = function(e) {
        this.moving = false;
        return this.$el.removeClass('moving');
      };

      TodoView.prototype.onDrop = function(e) {
        var id;
        e.preventDefault();
        if (!this.moving) {
          id = e.originalEvent.dataTransfer.getData('application/x-todo-id');
          return this.model.collection.swap(id, this.model.id);
        }
      };

      TodoView.prototype.onDragOver = function(e) {
        return e.preventDefault();
      };

      return TodoView;

    })(Backbone.View);
    AppView = (function(_super) {
      __extends(AppView, _super);

      function AppView() {
        _ref3 = AppView.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      AppView.prototype.el = '#todoapp';

      AppView.prototype.template = function(data) {
        var _temp;
        _temp = _template("#stats-template");
        return _temp(data);
      };

      AppView.prototype.events = {
        "keypress #new-todo": "createOnEnter",
        "click #clear-completed": "clearCompleted",
        "click #toggle-all": "toggleAllComplete"
      };

      AppView.prototype.initialize = function() {
        _.bindAll(this);
        this.collection = new TodoList;
        this.input = this.$("#new-todo");
        this.allCheckbox = this.$("#toggle-all")[0];
        this.listenTo(this.collection, 'add', this.addOne);
        this.listenTo(this.collection, 'all', this.render);
        this.listenTo(this.collection, 'sort', this.reorder);
        this.list = this.$("#todo-list");
        this.footer = this.$('footer');
        this.main = this.$("#main");
        return this.collection.fetch();
      };

      AppView.prototype.render = function() {
        var done, remaining, _html;
        done = this.collection.done().length;
        remaining = this.collection.remaining().length;
        if (this.collection.length) {
          this.main.show();
          _html = this.template({
            done: done,
            remaining: remaining
          });
          this.footer.show().html(_html);
        } else {
          this.main.hide();
          this.footer.hide();
        }
        this.allCheckbox.checked = !remaining;
        return this;
      };

      AppView.prototype.addOne = function(todo) {
        var view;
        view = new TodoView({
          model: todo
        });
        return this.list.append(view.render().el);
      };

      AppView.prototype.reorder = function() {
        this.list.html('');
        return this.addAll();
      };

      AppView.prototype.addAll = function() {
        return this.collection.each(this.addOne);
      };

      AppView.prototype.createOnEnter = function(e) {
        var value;
        if (e.keyCode !== 13) {
          return;
        }
        value = this.input.val();
        this.collection.create({
          title: value
        });
        return this.input.val('');
      };

      AppView.prototype.clearCompleted = function() {
        _.invoke(this.collection.done(), 'destroy');
        return false;
      };

      AppView.prototype.toggleAllComplete = function() {
        var done;
        done = this.allCheckbox.checked;
        return this.collection.each(function(todo) {
          return todo.save({
            done: done
          });
        });
      };

      return AppView;

    })(Backbone.View);
    return new AppView;
  });

}).call(this);
